import time
import random

# --- Игровые переменные ---
игрок = {
    "деньги": 10000,
    "подписчики": 0,
    "рейтинг": 0,
    "игры": [],
    "жанры": {},
    "технологии": [],
    "сотрудники": [],
    "офис": {"уровень": 1, "оборудование": [], "расходы": 1000},
    "лаунчер": {"выпущен": False, "доход": 0, "игры": []},
    "хайп": 0,
    "счастье_сотрудников": 100,
    "усталость_сотрудников": 0,
    "день": 1
}

игровой_день = 1
максимальный_день = 365

def главное_меню():
    while True:
        print("\n=== Главный экран ===")
        print(f"День: {игрок['день']} | Деньги: ${игрок['деньги']} | Подписчики: {игрок['подписчики']} | Хайп: {игрок['хайп']}")
        print("1. Создать игру")
        print("2. Исследования")
        print("3. Жанры")
        print("4. Сотрудники")
        print("5. Офис")
        print("6. Лаунчер")
        print("7. Маркетинг")
        print("8. Сообщество")
        print("9. Киберспорт")
        print("0. Завершить день")

        выбор = input("Выберите действие: ")
        if выбор == "1":
            создать_игру()
        elif выбор == "2":
            исследования()
        elif выбор == "3":
            меню_жанров()
        elif выбор == "4":
            меню_сотрудников()
        elif выбор == "5":
            меню_офиса()
        elif выбор == "6":
            меню_лаунчера()
        elif выбор == "7":
            меню_маркетинга()
        elif выбор == "8":
            страница_разработчика()
        elif выбор == "9":
            меню_киберспорта()
        elif выбор == "0":
            следующий_день()
        else:
            print("Неверный ввод.")

# --- Основное меню ---

def следующий_день():
    global игровой_день
    игровой_день += 1
    игрок["деньги"] -= игрок["офис"]["расходы"]
    игрок["усталость_сотрудников"] += 5
    расходы_на_серверы()
    доход_от_лаунчера()
    расходы_на_сотрудников()
    проверка_выгорания()
    восстановление_счастья()
    экономика_жанров()
    if игрок["усталость_сотрудников"] >= 100:
        игрок["счастье_сотрудников"] -= 10
        игрок["усталость_сотрудников"] = 80
    if игрок["счастье_сотрудников"] < 0:
        игрок["счастье_сотрудников"] = 0
    print("\nНовый день наступил.")
    time.sleep(1)

# --- Заглушки механик по направлениям ---
def создать_игру(): print("Механика создания игры пока не реализована.")
def исследования(): print("Механика исследований пока не реализована.")
def меню_жанров(): print("Механика жанров пока не реализована.")
def меню_сотрудников(): print("Механика сотрудников пока не реализована.")
def меню_офиса(): print("Механика офиса пока не реализована.")
def меню_лаунчера(): print("Механика лаунчера пока не реализована.")
def меню_маркетинга(): print("Механика маркетинга пока не реализована.")
def меню_сообщества(): print("Механика сообщества пока не реализована.")
def меню_киберспорта(): print("Механика киберспорта пока не реализована.")

# --- Запуск игры ---
def игра():
    while игровой_день <= максимальный_день:
        главное_меню()
        выбор = input("Выберите действие: ")
        if выбор == "1":
            создать_игру()
        elif выбор == "2":
            исследования()
        elif выбор == "3":
            меню_жанров()
        elif выбор == "4":
            меню_сотрудников()
        elif выбор == "5":
            меню_офиса()
        elif выбор == "6":
            меню_лаунчера()
        elif выбор == "7":
            меню_маркетинга()
        elif выбор == "8":
            меню_сообщества()
        elif выбор == "9":
            меню_киберспорта()
        elif выбор == "2":
            страница_разработчика()
        elif выбор == "0":
            следующий_день()
        else:
            print("Неверный выбор.")

    print("\nИгра окончена. Спасибо за игру!")

# --- Старт ---
игра()



# --- Жанры и их развитие ---
доступные_жанры = {
    "RPG": {"открыт": True, "уровень": 1},
    "Шутер": {"открыт": False, "уровень": 0},
    "Стратегия": {"открыт": False, "уровень": 0},
    "Симулятор": {"открыт": False, "уровень": 0},
    "Хоррор": {"открыт": False, "уровень": 0}
}

def меню_жанров():
    while True:
        print("\n=== Жанры ===")
        for жанр, данные in доступные_жанры.items():
            статус = "Открыт" if данные["открыт"] else "Закрыт"
            print(f"{жанр}: {статус}, уровень {данные['уровень']}")
        print("1. Изучить жанр")
        print("2. Прокачать жанр")
        print("2. Страница разработчика")
        print("0. Назад")
        выбор = input("Выберите действие: ")

        if выбор == "1":
            изучить_жанр()
        elif выбор == "2":
            прокачать_жанр()
        elif выбор == "2":
            страница_разработчика()
        elif выбор == "0":
            break
        else:
            print("Неверный ввод.")

def изучить_жанр():
    print("\nДоступные для изучения жанры:")
    for жанр, данные in доступные_жанры.items():
        if not данные["открыт"]:
            print(f"- {жанр}")
    выбор = input("Введите жанр для изучения: ")
    if выбор in доступные_жанры and not доступные_жанры[выбор]["открыт"]:
        стоимость = 3000
        if игрок["деньги"] >= стоимость:
            игрок["деньги"] -= стоимость
            доступные_жанры[выбор]["открыт"] = True
            доступные_жанры[выбор]["уровень"] = 1
            print(f"Жанр '{выбор}' изучен!")
        else:
            print("Недостаточно денег.")
    else:
        print("Жанр не найден или уже открыт.")

def прокачать_жанр():
    print("\nКакие жанры вы хотите прокачать?")
    for жанр, данные in доступные_жанры.items():
        if данные["открыт"]:
            print(f"- {жанр} (уровень {данные['уровень']})")
    выбор = input("Введите жанр для прокачки: ")
    if выбор in доступные_жанры and доступные_жанры[выбор]["открыт"]:
        стоимость = доступные_жанры[выбор]["уровень"] * 2000
        if игрок["деньги"] >= стоимость:
            игрок["деньги"] -= стоимость
            доступные_жанры[выбор]["уровень"] += 1
            print(f"Жанр '{выбор}' теперь уровень {доступные_жанры[выбор]['уровень']}")
        else:
            print("Недостаточно денег.")
    else:
        print("Жанр не найден или не открыт.")



# --- Технологии и Исследования ---

технологии = {
    "Геймплей": [
        "Сетевая интеграция",
        "Поддержка XR",
        "Процедурная генерация",
        "Система эмоций",
        "Интеграция с Хабом",
        "Режим выживания",
        "Динамическая погода",
        "Система перков",
        "Разрушаемость окружения",
        "Древо навыков",
        "Кросс-платформенная база",
        "Система рейтинга игроков",
        "Тактильный отклик",
        "Скрытая механика лояльности",
        "Умная экономическая модель"
    ],
    "Графика": [
        "Генерация лиц",
        "Фотореализм",
        "Освещение 2.0",
        "Тени нового поколения",
        "Анимация костей",
        "Реалистичная вода",
        "Быстрая загрузка",
        "Термодинамическое моделирование",
        "Биомеханическая анимация",
        "Мягкая физика"
    ],
    "Онлайн и Метагейм": [
        "Облачная платформа",
        "Асинхронный ИИ",
        "Поддержка внутриигровых турниров",
        "Механика челленджей",
        "Адаптивная сложность",
        "Глобальные события",
        "Онлайн-тренды",
        "Модульные обновления"
    ],
    "Звук": [
        "3D-звук окружения",
        "Реалистичная реверберация",
        "Адаптивная музыкальная система",
        "Звуковая симуляция погоды",
        "Голосовое взаимодействие",
        "Глубокая звуковая сцена",
        "Тематическая озвучка персонажей",
        "Интерактивный саундтрек",
        "Динамическое заглушение звуков",
        "Многослойная озвучка событий"
    ]
}

изученные_технологии = []

def исследования():
    while True:
        print("\n=== Исследования ===")
        print("У вас изучено:", len(изученные_технологии), "технологий")
        print("1. Посмотреть изученные")
        print("2. Изучить новую технологию")
        print("2. Страница разработчика")
        print("0. Назад")
        выбор = input("Выберите действие: ")

        if выбор == "1":
            print("\n=== Изученные технологии ===")
            if not изученные_технологии:
                print("Пока ничего не изучено.")
            else:
                for tech in изученные_технологии:
                    print("-", tech)
        elif выбор == "2":
            изучить_технологию()
        elif выбор == "2":
            страница_разработчика()
        elif выбор == "0":
            break
        else:
            print("Неверный ввод.")

def изучить_технологию():
    print("\n=== Категории технологий ===")
    категории = list(технологии.keys())
    for i, категория in enumerate(категории):
        print(f"{i+1}. {категория}")
    выбор = input("Выберите категорию: ")

    if выбор.isdigit() and 1 <= int(выбор) <= len(категории):
        категория = категории[int(выбор)-1]
        доступные = [t for t in технологии[категория] if t not in изученные_технологии]
        if not доступные:
            print("Все технологии в этой категории уже изучены.")
            return
        print("\n=== Доступные технологии ===")
        for i, tech in enumerate(доступные):
            print(f"{i+1}. {tech} — $5000")
        под_выбор = input("Выберите технологию: ")
        if под_выбор.isdigit() and 1 <= int(под_выбор) <= len(доступные):
            цена = 5000
            if игрок["деньги"] >= цена:
                tech_name = доступные[int(под_выбор)-1]
                игрок["деньги"] -= цена
                изученные_технологии.append(tech_name)
                print(f"Вы изучили технологию: {tech_name}")
            else:
                print("Недостаточно денег.")
        else:
            print("Неверный выбор.")
    else:
        print("Неверный выбор категории.")



# --- Сотрудники ---

import random

типы_сотрудников = [
    "Геймдизайнер", "Программист", "Художник", "Звукорежиссёр",
    "Техник", "HR-менеджер", "Модератор", "PR-специалист", "Аналитик"
]

имена = ["Алекс", "Мария", "Денис", "Ольга", "Иван", "Ева", "Кирилл", "Лена", "Максим", "София"]

def меню_сотрудников():
    while True:
        print("\n=== Команда ===")
        if not игрок["сотрудники"]:
            print("У вас пока нет сотрудников.")
        else:
            for i, s in enumerate(игрок["сотрудники"]):
                print(f"{i+1}. {s['имя']} — {s['роль']}, Уровень: {s['уровень']}, Эффективность: {s['эффективность']}%, Счастье: {s['счастье']}%, Навыки: {s['навыки']}")
        print("1. Нанять сотрудника")
        print("2. Уволить сотрудника")
        print("2. Страница разработчика")
        print("0. Назад")
        выбор = input("Выберите действие: ")

        if выбор == "1":
            нанять_сотрудника()
        elif выбор == "2":
            уволить_сотрудника()
        elif выбор == "2":
            страница_разработчика()
        elif выбор == "0":
            break
        else:
            print("Неверный ввод.")

def нанять_сотрудника():
    кандидаты = []
    for _ in range(3):
        имя = random.choice(имена)
        роль = random.choice(типы_сотрудников)
        опыт = random.randint(1, 5)
        эффективность = 50 + опыт * 5
        зарплата = опыт * 1000
        счастье = random.randint(70, 100)
        кандидаты.append({
            "имя": имя,
            "роль": роль,
            "опыт": опыт,
            "эффективность": эффективность,
            "зарплата": зарплата,
            "счастье": счастье,
            "уровень": опыт,
            "навыки": сгенерировать_навыки(опыт)
        })

    print("\n=== Кандидаты ===")
    for i, к in enumerate(candidates := кандидаты):
        print(f"{i+1}. {к['имя']} — {к['роль']}, Опыт: {к['опыт']}, Эффективность: {к['эффективность']}%, Зарплата: ${к['зарплата']}")

    выбор = input("Выберите номер сотрудника для найма (0 — отмена): ")
    if выбор.isdigit():
        выбор = int(выбор)
        if 1 <= выбор <= len(candidates):
            выбранный = candidates[выбор - 1]
            if игрок["деньги"] >= выбранный["зарплата"]:
                игрок["деньги"] -= выбранный["зарплата"]
                игрок["сотрудники"].append(выбранный)
                print(f"{выбранный['имя']} нанят в команду!")
            else:
                print("Недостаточно денег.")
        elif выбор == 0:
            print("Отмена.")
        else:
            print("Неверный выбор.")

def уволить_сотрудника():
    if not игрок["сотрудники"]:
        print("У вас нет сотрудников.")
        return
    for i, s in enumerate(игрок["сотрудники"]):
        print(f"{i+1}. {s['имя']} — {s['роль']}")
    выбор = input("Введите номер сотрудника для увольнения (0 — отмена): ")
    if выбор.isdigit():
        выбор = int(выбор)
        if 1 <= выбор <= len(игрок["сотрудники"]):
            уволенный = игрок["сотрудники"].pop(выбор - 1)
            print(f"{уволенный['имя']} уволен.")
        elif выбор == 0:
            print("Отмена.")
        else:
            print("Неверный выбор.")



# --- Дополнение: уровень и навыки сотрудников ---

def сгенерировать_навыки(уровень):
    очки = уровень * 3
    навыки = {"Креативность": 0, "Техничность": 0, "Командная работа": 0}
    for _ in range(очки):
        навык = random.choice(list(навыки.keys()))
        навыки[навык] += 1
    return навыки



# --- Офис и оборудование ---

оборудование_по_уровням = {
    1: ["Базовая сборка ПК", "Мини-сервер"],
    2: ["Рабочая станция дизайна", "Базовый генератор звука", "Технический анализатор"],
    3: ["VR-платформа", "Креативный хаб", "AI-редактор контента"],
    4: ["Тестовая UX-лаборатория", "Облачная симуляция", "Сетевой мониторинг"],
    5: ["Нейросервер разработки", "Гибкий модуль распределения задач", "Центр инноваций"]
}

купленное_оборудование = []

def меню_офиса():
    while True:
        print("\n=== Офис ===")
        print(f"Уровень офиса: {игрок['офис']['уровень']}")
        print(f"Ежедневные расходы: ${игрок['офис']['расходы']}")
        print(f"Установлено: {купленное_оборудование if купленное_оборудование else 'Ничего'}")
        print("1. Улучшить офис")
        print("2. Купить оборудование")
        print("2. Страница разработчика")
        print("0. Назад")

        выбор = input("Выберите действие: ")

        if выбор == "1":
            улучшить_офис()
        elif выбор == "2":
            купить_оборудование()
        elif выбор == "2":
            страница_разработчика()
        elif выбор == "0":
            break
        else:
            print("Неверный ввод.")

def улучшить_офис():
    текущий = игрок["офис"]["уровень"]
    if текущий >= 5:
        print("Максимальный уровень офиса достигнут.")
        return
    стоимость = текущий * 10000
    if игрок["деньги"] >= стоимость:
        игрок["деньги"] -= стоимость
        игрок["офис"]["уровень"] += 1
        игрок["офис"]["расходы"] += 2000
        print(f"Офис улучшен до уровня {игрок['офис']['уровень']}!")
    else:
        print("Недостаточно денег.")

def купить_оборудование():
    уровень = игрок["офис"]["уровень"]
    доступное = [элемент for элемент in оборудование_по_уровням.get(уровень, []) if элемент not in купленное_оборудование]

    if not доступное:
        print("Нет доступного оборудования на этом уровне или всё куплено.")
        return

    print("\n=== Доступное оборудование ===")
    for i, item in enumerate(доступное):
        print(f"{i+1}. {item} — $5000")
    выбор = input("Выберите оборудование для установки (0 — отмена): ")

    if выбор.isdigit():
        выбор = int(выбор)
        if выбор == 0:
            return
        elif 1 <= выбор <= len(доступное):
            if игрок["деньги"] >= 5000:
                игрок["деньги"] -= 5000
                купленное_оборудование.append(доступное[выбор - 1])
                print(f"{доступное[выбор - 1]} установлено в офис.")
            else:
                print("Недостаточно денег.")
        else:
            print("Неверный выбор.")
    else:
        print("Введите число.")



# --- Лаунчер и доход ---

def меню_лаунчера():
    while True:
        print("\n=== Лаунчер ===")
        if not игрок["лаунчер"]["выпущен"]:
            print("Лаунчер не выпущен.")
            print("1. Выпустить лаунчер ($20000)")
        else:
            print("Лаунчер активен.")
            print(f"Доход от лаунчера: ${игрок['лаунчер']['доход']}/день")
        print("2. Страница разработчика")
        print("0. Назад")

        выбор = input("Выберите действие: ")

        if выбор == "1" and not игрок["лаунчер"]["выпущен"]:
            запустить_лаунчер()
        elif выбор == "2":
            страница_разработчика()
        elif выбор == "0":
            break
        else:
            print("Неверный ввод.")


def запустить_лаунчер():
    стоимость = 20000
    офис_уровень = игрок["офис"]["уровень"]
    оборудование_кол = len(купленное_оборудование)
    подписчики = игрок["подписчики"]

    if игрок["лаунчер"]["выпущен"]:
        print("Лаунчер уже запущен.")
        return

    if офис_уровень < 3:
        print("Для запуска лаунчера требуется офис уровня 3 или выше.")
        return
    if оборудование_кол < 2:
        print("Для запуска лаунчера требуется минимум 2 единицы оборудования.")
        return
    if подписчики < 1000:
        print("Для запуска лаунчера нужно минимум 1000 подписчиков.")
        return

    if игрок["деньги"] >= стоимость:
        игрок["деньги"] -= стоимость
        игрок["лаунчер"]["выпущен"] = True
        игрок["лаунчер"]["бонус_к_играм"] = True
        print("Вы запустили собственный лаунчер! Теперь вы получаете доход и бонусы от его использования.")
    else:
        print("Недостаточно денег.")


def доход_от_лаунчера():
    расходы_на_сотрудников()
    проверка_выгорания()
    восстановление_счастья()
    экономика_жанров()
    if игрок["лаунчер"]["выпущен"]:
        базовый_доход = игрок["подписчики"] * 0.2
        бонус = 0
        if "Облачная симуляция" in купленное_оборудование:
            бонус += 500
        if "Нейросервер разработки" in купленное_оборудование:
            бонус += 1000
        доход = int(базовый_доход + бонус)
        игрок["деньги"] += доход
        игрок["лаунчер"]["доход"] = доход
        # В будущем: учёт подписочной модели, скидок и обновлений



# --- Маркетинг и хайп ---

использованные_акции = []

def меню_маркетинга():
    while True:
        print("\n=== Маркетинг ===")
        print(f"Текущий хайп: {игрок['хайп']}")
        print("1. Пост в соцсетях (бесплатно, +1 хайп)")
        print("2. Меме-кампания ($500, +3 хайпа, шанс провала)")
        print("3. Прямой эфир разработчика ($1000, +5 хайпа)")
        print("4. Статейка на портале ($3000, +7 хайпа)")
        print("5. Официальный трейлер ($5000, +10 хайпа)")
        print("6. Трейлер с блогером ($8000, +15 хайпа)")
        print("7. Флешмоб с хештегами ($7000, +12 хайпа)")
        print("8. Закрытая демонстрация ($6000, +10 хайпа +бонус)")
        print("9. Глобальная рекламная кампания ($15000, +20 хайпа)")
        print("2. Страница разработчика")
        print("0. Назад")
        выбор = input("Выберите акцию: ")

        if выбор == "0":
            break
        else:
            обработать_маркетинг(выбор)

def есть_PR():
    for s in игрок["сотрудники"]:
        if s["роль"] == "PR-специалист":
            return True
    return False

def обработать_маркетинг(выбор):
    эффекты = {
        "1": {"стоимость": 0, "хайп": 1},
        "2": {"стоимость": 500, "хайп": 3, "шанс_провала": 0.2},
        "3": {"стоимость": 1000, "хайп": 5},
        "4": {"стоимость": 3000, "хайп": 7},
        "5": {"стоимость": 5000, "хайп": 10},
        "6": {"стоимость": 8000, "хайп": 15},
        "7": {"стоимость": 7000, "хайп": 12},
        "8": {"стоимость": 6000, "хайп": 10, "бонус_рейтинг": True},
        "9": {"стоимость": 15000, "хайп": 20}
    }

    акция = эффекты.get(выбор)
    if not акция:
        print("Неверный выбор.")
        return

    if выбор in использованные_акции and акция["стоимость"] > 0:
        print("Эта акция уже использовалась сегодня.")
        return

    if игрок["деньги"] < акция["стоимость"]:
        print("Недостаточно денег.")
        return

    игрок["деньги"] -= акция["стоимость"]

    if "шанс_провала" in акция and random.random() < акция["шанс_провала"]:
        print("Кампания провалилась и не принесла хайпа.")
        использованные_акции.append(выбор)
        return

    итоговый_хайп = акция["хайп"]
    if есть_PR():
        итоговый_хайп = int(itоговый_хайп * 1.25)

    игрок["хайп"] += итоговый_хайп
    print(f"Кампания успешна! Вы получили +{итоговый_хайп} хайпа.")

    if акция.get("бонус_рейтинг"):
        игрок["рейтинг"] += 1
        print("Пресса оценила закрытую демонстрацию — рейтинг повышен!")

    использованные_акции.append(выбор)



# --- Комьюнити, отзывы и модерация ---

отзывы_положительные = [
    "Графика — огонь! Видно, что художники поработали.",
    "Сюжет держит в напряжении до последней минуты.",
    "Поддержка XR реально добавляет атмосферу.",
    "Никогда ещё не играл в симулятор с такой глубиной.",
    "Багов почти нет — уважаю команду за качество.",
    "Анимация лиц — уровень AAA.",
    "Подписываюсь на эту студию. Жду новых проектов!"
]

отзывы_нейтральные = [
    "Всё вроде нормально, но не зацепило.",
    "Хайпа было больше, чем самой игры.",
    "VR — круто, но игра короткая.",
    "Геймплей классный, но музыка однообразна."
]

отзывы_негативные = [
    "Провал года. Одни баги и вылеты.",
    "Трейлер обещал одно, а получили совсем другое.",
    "Скучно. Через 30 минут выключил.",
    "Графика с PS2, и это в 2025?!",
    "После обновления лаунчера вообще не запускается."
]

реакции_подписчиков = [
    "Хочу продолжение этой игры!",
    "Эта студия реально развивается!",
    "Сделайте наконец-то нормальную игру, а не это…",
    "Всё бы ничего, но вы забыли про фанатов симуляторов."
]

инциденты = [
    "Технический сбой в лаунчере вызвал волну негатива.",
    "Игроки массово жалуются на баги.",
    "Студия забанила игроков без объяснений!",
    "Крупный блогер разнёс вашу игру в пух и прах.",
    "В сеть утёк билд до релиза!"
]

репутация = 100

def сгенерировать_отзыв():
    шанс = random.randint(1, 100)
    if шанс > 85:
        отзыв = random.choice(отзывы_негативные)
    elif шанс > 60:
        отзыв = random.choice(отзывы_нейтральные)
    else:
        отзыв = random.choice(отзывы_положительные)

    реакция = random.choice(реакции_подписчиков)
    print("\n=== Отзывы пользователей ===")
    print("Мнение:", отзыв)
    print("Комментарий подписчика:", реакция)

def сгенерировать_инцидент():
    шанс = random.randint(1, 100)
    if шанс > 75:
        if not any(s["роль"] == "Модератор" for s in игрок["сотрудники"]):
            инцидент = random.choice(инциденты)
            игрок["подписчики"] = max(0, игрок["подписчики"] - 300)
            игрок["хайп"] = max(0, игрок["хайп"] - 10)
            print("\n=== Инцидент в сообществе! ===")
            print(инцидент)
            print("Подписчики потеряны. Хайп снижен.")



# --- Репутация студии и отзывы о разработчике ---

отзывы_токсичные = [
    "Эта студия — позор инди-разработки.",
    "Они даже баги не фиксируют, а уже новое выпускают.",
    "Когда-то делали круто, теперь сплошной маркетинг.",
    "Пиар круче игр. Разработчики забыли про геймплей.",
    "Лаунчер завис — как и их фантазия.",
    "Не доверяю больше этой студии.",
    "Лучше бы вернулись к прошлым играм.",
    "Потратили хайп впустую.",
    "Поддержка молчит неделями!",
    "Модератор? Где он вообще?"
]

отзывы_о_студии_позитивные = [
    "Уважаю этих ребят — видно, растут!",
    "Каждая новая игра — событие.",
    "Надёжный разработчик. Поддержка всегда отвечает.",
    "Качество — визитка этой студии.",
    "Лаунчер отличный, как и игры."
]

def статус_разработчика():
    if репутация >= 80:
        return "Уважаемый разработчик"
    elif репутация >= 50:
        return "Стабильный разработчик"
    else:
        return "Низкая репутация"

def страница_разработчика():
    print("\n=== Страница разработчика ===")
    print(f"Репутация студии: {репутация}/100")
    print(f"Подписчики: {игрок['подписчики']}")
    print(f"Статус: {статус_разработчика()}")
    print("Отзывы пользователей:")
    if репутация >= 75:
        for _ in range(3):
            print("-", random.choice(отзывы_о_студии_позитивные))
    elif репутация <= 40:
        for _ in range(3):
            print("-", random.choice(отзывы_токсичные))
    else:
        print("- Пользователи относятся к студии нейтрально.")



# --- Киберспорт и турниры ---

популярность_киберспорта = 0
фанаты_киберспорта = 0
активные_турниры = []
киберспортивные_жанры = ["Шутер", "Стратегия", "Файтинг", "Симулятор"]

def меню_киберспорта():
    print("\n=== Киберспортивная сцена ===")
    if not игрок["лаунчер"]["выпущен"]:
        print("Сначала нужно выпустить лаунчер.")
        return

    if not any(e in купленное_оборудование for e in ["Мини-сервер", "Серверный кластер"]):
        print("Требуется серверное оборудование.")
        return

    жанры = [жанр for жанр, данные in доступные_жанры.items() if данные["открыт"]]
    print("Ваши открытые жанры:", жанры)
    выбранный_жанр = input("Введите жанр игры, которую хотите продвигать как киберспортивную: ")

    if выбранный_жанр not in киберспортивные_жанры:
        print("Этот жанр не подходит для киберспорта.")
        return

    if not all(t in изученные_технологии for t in ["Сетевая интеграция", "Рейтинг игроков", "Поддержка внутриигровых турниров"]):
        print("Требуются технологии: Сетевая интеграция, Рейтинг игроков, Турниры.")
        return

    if not any(s["роль"] == "Кибер-менеджер" for s in игрок["сотрудники"]):
        print("Нужен киберспортивный менеджер в команде.")
        return

    print(f"Жанр '{выбранный_жанр}' зарегистрирован как киберспортивный.")
    запустить_турниры()

def запустить_турниры():
    global популярность_киберспорта, фанаты_киберспорта
    print("=== Турнирный цикл начинается ===")
    print("Региональный турнир прошёл успешно!")
    игрок["подписчики"] += 500
    игрок["хайп"] += 1
    популярность_киберспорта += 20

    if популярность_киберспорта >= 40:
        print("Национальный турнир вызвал резонанс в прессе!")
        игрок["подписчики"] += 1500
        игрок["рейтинг"] += 2
        популярность_киберспорта += 30

    if популярность_киберспорта >= 80:
        print("Мировой чемпионат собрал тысячи фанатов!")
        игрок["подписчики"] += 5000
        игрок["деньги"] += 10000
        фанаты_киберспорта += 1

def расходы_на_серверы():
    if "Серверный кластер" in купленное_оборудование:
        игрок["деньги"] -= 1000



# --- Экономика: расходы, выгорание, развитие жанров ---

def расходы_на_сотрудников():
    зарплаты = sum(s["зарплата"] for s in игрок["сотрудники"])
    игрок["деньги"] -= зарплаты
    if зарплаты > 0:
        print(f"Выплачено зарплат сотрудникам: -${зарплаты}")

def проверка_выгорания():
    for сотрудник in игрок["сотрудники"]:
        сотрудник["усталость"] = сотрудник.get("усталость", 0) + 10
        if сотрудник["усталость"] > 80:
            сотрудник["эффективность"] = max(10, сотрудник["эффективность"] - 5)
            print(f"{сотрудник['имя']} перегружен и теряет эффективность!")
        if сотрудник["усталость"] > 100:
            сотрудник["усталость"] = 100

def восстановление_счастья():
    for s in игрок["сотрудники"]:
        if игрок["офис"]["уровень"] >= 3:
            s["счастье"] = min(100, s["счастье"] + 2)
        if any(staff["роль"] == "HR-менеджер" for staff in игрок["сотрудники"]):
            s["счастье"] = min(100, s["счастье"] + 3)

def экономика_жанров():
    for жанр, данные in доступные_жанры.items():
        if данные["открыт"]:
            данные["уровень"] += 0.1  # Постепенное развитие
            if данные["уровень"] > 10:
                данные["уровень"] = 10



# --- Создание и выпуск игры ---

def создать_игру():
    название = input("Введите название вашей игры: ")
    print("Выберите жанр:")
    жанры = [j for j, d in доступные_жанры.items() if d["открыт"]]
    for i, ж in enumerate(жанры):
        print(f"{i+1}. {ж}")
    выбор = input("Введите номер жанра: ")
    if not выбор.isdigit() or not (1 <= int(выбор) <= len(жанры)):
        print("Неверный выбор.")
        return
    жанр = жанры[int(выбор) - 1]

    print("Выберите технологии (введите номера через запятую):")
    for i, t in enumerate(изученные_технологии):
        print(f"{i+1}. {t}")
    выбор_техн = input("Ваш выбор: ").split(",")

    выбранные_технологии = []
    for i in выбор_техн:
        if i.strip().isdigit():
            индекс = int(i.strip()) - 1
            if 0 <= индекс < len(изученные_технологии):
                выбранные_технологии.append(изученные_технологии[индекс])

    бюджет = input("Введите бюджет разработки ($10000–$100000): ")
    if not бюджет.isdigit():
        print("Неверный ввод.")
        return
    бюджет = int(budget)
    if бюджет < 10000 or бюджет > 100000 or игрок["деньги"] < бюджет:
        print("Недостаточно денег или бюджет вне допустимого диапазона.")
        return
    игрок["деньги"] -= бюджет

    print("Игра создаётся...")
    качество = рассчитать_качество(жанр, выбранные_технологии, бюджет)
    игра = {
        "название": название,
        "жанр": жанр,
        "технологии": выбранные_технологии,
        "качество": качество,
        "хайп": игрок["хайп"]
    }
    игрок["игры"].append(игра)
    релиз_игры(игра)

def рассчитать_качество(жанр, технологии, бюджет):
    базовое = 20 + доступные_жанры[жанр]["уровень"] * 2
    навыки = sum(
        sum(s["навыки"].values()) for s in игрок["сотрудники"]
    )
    эффективность = sum(s["эффективность"] for s in игрок["сотрудники"])
    бонус_техн = len(технологии) * 2
    усталость = sum(s.get("усталость", 0) for s in игрок["сотрудники"])
    штраф_усталости = усталость // 50
    итог = базовое + навыки + эффективность // 10 + бонус_техн + бюджет // 5000 - штраф_усталости
    return min(100, итог)

def релиз_игры(игра):
    print(f"Игра '{игра['название']}' выпущена!")
    платформа = "Лаунчер" if игрок["лаунчер"]["выпущен"] else "Внешняя платформа"
    хайп = игра["хайп"]
    качество = игра["качество"]
    продажи = int((качество + хайп) * 100 + random.randint(0, 1000))
    доход = продажи * 2
    if платформа == "Лаунчер":
        доход = int(доход * 1.2)
    игрок["деньги"] += доход
    игрок["подписчики"] += продажи // 10
    игрок["хайп"] = max(0, игрок["хайп"] - 10)
    print(f"Игра получила {качество}/100. Продажи: {продажи} копий. Доход: ${доход}")
    сгенерировать_отзыв()
    сгенерировать_инцидент()






